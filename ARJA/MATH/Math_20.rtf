{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 -	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 res[i]=(x[i] - boundaries[0][i]) / diff;
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 +	mu=lambda / 2;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 res[i]=(x[i] - boundaries[0][i]) / diff;
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 +	this.valueRange=valueRange;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 res[i]=(x[i] - boundaries[0][i]) / diff;
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 +	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\'a0 res[i]=diff * x[i] + boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 res[i]=(x[i] - boundaries[0][i]) / diff;
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0
\f1\fs24 \

\f0\fs29\fsmilli14667 +	lambda=4 + (int)(3. * Math.log(dimension));
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	repaired[i]=1.0;\'a0
\f1\fs24 \

\f0\fs29\fsmilli14667 +	diagD=diag(D);
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 res[i]=(x[i] - boundaries[0][i]) / diff;
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 +	isMinimize=(getGoalType() == GoalType.MINIMIZE);
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	for (int i=0; i < x.length; i++) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 double diff=boundaries[1][i] - boundaries[0][i];
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\'a0 res[i]=(x[i] - boundaries[0][i]) / diff;
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 +	ccovmuSep=Math.min(1 - ccov1,ccovmu * (dimension + 1.5) / 3.);
\f1\fs24 \
}