{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 -	minIndex=i;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	for (int i=0; i < tableau.getNumArtificialVariables(); i++) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 int column=i + tableau.getArtificialVariableOffset();
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 final double entry=tableau.getEntry(row,column);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 if (Precision.equals(entry,1d,maxUlps) && row.equals(tableau.getBasicRow(column))) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	 \'a0 return row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	 \}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	minIndex=i;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	minRatioPositions=new ArrayList<Integer>();
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	return row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	for (Integer row : minRatioPositions) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 for (int i=0; i < tableau.getNumArtificialVariables(); i++) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 \'a0 int column=i + tableau.getArtificialVariableOffset();
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	 \'a0 final double entry=tableau.getEntry(row,column);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	 \'a0 if (Precision.equals(entry,1d,maxUlps) && row.equals(tableau.getBasicRow(column))) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 \'a0 \'a0 return row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	 \'a0 \}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 \}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (row == tableau.getBasicRow(i)) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 if (i < minIndex) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 \'a0 minIndex=i;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 \'a0 minRow=row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 \}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (i < minIndex) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 minIndex=i;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 minRow=row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	return minRow;\'a0
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	incrementIterationsCounter();
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (i < minIndex) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 minIndex=i;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 minRow=row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (Precision.equals(entry,1d,maxUlps) && row.equals(tableau.getBasicRow(column))) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 return row;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	return null;
\f1\fs24 \strokec2 \
\
}