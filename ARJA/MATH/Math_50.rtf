{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	incrementEvaluationCount();
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	f0=computeObjectiveValue(x0);
\f1\fs24 \

\f0\fs29\fsmilli14667 +	f0=f1;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),atol)) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\'a0 return x1;
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	 x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	if (f1 == 0.0) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 +	return x1;
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	f0=f1;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	if (!inverted) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\'a0 return x1;
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	if (f1 >= 0) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 +	return x1;
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));\'a0
\f1\fs24 \

\f0\fs29\fsmilli14667 +	this.allowed=AllowedSolution.ANY_SIDE;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	f0=computeObjectiveValue(x0);
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	if (x == x1) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 -	 x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 -	 f0=computeObjectiveValue(x0);
\f1\fs24 \

\f0\fs29\fsmilli14667 -	\}
\f1\fs24 \

\f0\fs29\fsmilli14667 +	f0*=0.5;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	f1=fx;
\f1\fs24 \

\f0\fs29\fsmilli14667 ,
\f1\fs24 \

\f0\fs29\fsmilli14667 -	x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
\f1\fs24 \

\f0\fs29\fsmilli14667 +	if (FastMath.abs(f1) <= ftol) \{
\f1\fs24 \

\f0\fs29\fsmilli14667 +	return x1;
\f1\fs24 \

\f0\fs29\fsmilli14667 +	\}}