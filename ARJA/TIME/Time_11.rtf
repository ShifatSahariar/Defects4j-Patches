{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 -	if (tailZone == null && i == ruleSetCount - 1) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (id == null) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 throw new IllegalArgumentException();
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (tailZone == null && i == ruleSetCount - 1) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (addTransition(transitions,next)) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	 if (tailZone != null) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 \'a0 break;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 \}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \
\

\f0\fs29\fsmilli14667 \strokec2 +	if (fromYear <= toYear) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 OfYear ofYear=new OfYear(mode,monthOfYear,dayOfMonth,dayOfWeek,advanceDayOfWeek,millisOfDay);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 Recurrence recurrence=new Recurrence(ofYear,nameKey,saveMillis);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 Rule rule=new Rule(recurrence,fromYear,toYear);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 getLastRuleSet().addRule(rule);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (tailZone != null) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 break;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (ZoneInfoCompiler.verbose()) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 System.out.println("Fixing duplicate recurrent name key - " + tailZone.iStartRecurrence.getNameKey());
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	System.out.println("Writing ZoneInfoMap");
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	return new DSTZone(id,iStandardOffset,startRule.iRecurrence,endRule.iRecurrence);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (id == null) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 return null;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	rs=new RuleSet(rs);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (ZoneInfoCompiler.verbose()) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 System.out.println("Fixing duplicate recurrent name key - " + tailZone.iStartRecurrence.getNameKey());
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (id == null) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 return null;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (tailZone == null && i == ruleSetCount - 1) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	if (tailZone != null) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\'a0 break;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	return new DSTZone(id,iStandardOffset,startRule.iRecurrence,endRule.iRecurrence);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	System.out.println("Writing zoneinfo files");
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	millis=rs.getUpperLimit(saveMillis);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	if (ZoneInfoCompiler.verbose()) \{
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\'a0 System.out.println("Fixing duplicate recurrent name key - " + tailZone.iStartRecurrence.getNameKey());
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	\}
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	tailZone=new DSTZone(tailZone.getID(),tailZone.iStandardOffset,tailZone.iStartRecurrence.renameAppend("-Summer"),tailZone.iEndRecurrence);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	System.out.println("Writing ZoneInfoMap");
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	return new DSTZone(id,iStandardOffset,startRule.iRecurrence,endRule.iRecurrence);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	return null;
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 ,
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 -	tailZone=rs.buildTailZone(id);
\f1\fs24 \strokec2 \

\f0\fs29\fsmilli14667 \strokec2 +	addTransition(transitions,next);
\f1\fs24 \strokec2 \
\
\
}