-	if (tmp < upper) {
-	  upper=((int)Math.ceil(tmp)) - 1;
-	}	
+	int min=Integer.MAX_VALUE;
,
-	if (tmp < upper) {
-	  upper=((int)Math.ceil(tmp)) - 1;
-	}	
+	final double n=random.nextGaussian();
,
-	if (chebyshevApplies) {
-	  double k=FastMath.sqrt((1.0 - p) / p);
-	  double tmp=mu - k * sigma;
-	  if (tmp > lower) {
-	    lower=((int)Math.ceil(tmp)) - 1;
-	  }
-	  k=1.0 / k;
-	  tmp=mu + k * sigma;
-	  if (tmp < upper) {
-	    upper=((int)Math.ceil(tmp)) - 1;
-	  }
-	}
+	if (p == 1.0) {
+	  return upper;
+	}
,
-	if (tmp < upper) {
-	  upper=((int)Math.ceil(tmp)) - 1;
-	}
+	double r=1.0d;
,
-	if (chebyshevApplies) {
-	  double k=FastMath.sqrt((1.0 - p) / p);
-	  double tmp=mu - k * sigma;
-	  if (tmp > lower) {
-	    lower=((int)Math.ceil(tmp)) - 1;
-	  }
-	  k=1.0 / k;
-	  tmp=mu + k * sigma;
-	  if (tmp < upper) {
-	    upper=((int)Math.ceil(tmp)) - 1;
-	  }
-	}
+	double min=Double.POSITIVE_INFINITY;
,
-	if (tmp < upper) {
-	  upper=((int)Math.ceil(tmp)) - 1;
-	}	
+	double v=0;
,
-	if (chebyshevApplies) {
-	  double k=FastMath.sqrt((1.0 - p) / p);
-	  double tmp=mu - k * sigma;
-	  if (tmp > lower) {
-	    lower=((int)Math.ceil(tmp)) - 1;
-	  }
-	  k=1.0 / k;
-	  tmp=mu + k * sigma;
-	  if (tmp < upper) {
-	    upper=((int)Math.ceil(tmp)) - 1;
-	  }
-	}
+	double p=0;
,
-	upper=((int)Math.ceil(tmp)) - 1;
+	while (lower + 1 < upper) {
+	  int xm=(lower + upper) / 2;
+	  if (xm < lower || xm > upper) {
+	    xm=lower + (upper - lower) / 2;
+	  }
+	  double pm=checkedCumulativeProbability(xm);
+	  if (pm >= p) {
+	    upper=xm;
+	  }
+	 else {
+	    lower=xm;
+	  }
+	}
,
-	upper=((int)Math.ceil(tmp)) - 1;
+	throw new OutOfRangeException(p,0,1);
,
