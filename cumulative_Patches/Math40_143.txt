- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX < xB == end - signChangeIndex <= signChangeIndex - start) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX < xB || end - signChangeIndex <= signChangeIndex - start) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > xA || end - signChangeIndex <= signChangeIndex - start) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > xA == end - signChangeIndex <= signChangeIndex - start) == true) {

,
- if (Double.isNaN(nextX)) {

,
+ if((nbPoints > signChangeIndex) == true){
+ signChangeIndex=nbPoints;
+ }else{

,
+ if((nbPoints > signChangeIndex) == true){
+ signChangeIndex=nbPoints;
+ }

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > xA || absYA < absYB) == false) {

,
+ if((end - start > signChangeIndex) == true){
+ signChangeIndex=end - start;
+ }else{

,
+ if((end - start > signChangeIndex) == true){
+ signChangeIndex=end - start;
+ }

,
+ if((end > 2) == true){
+ end=2;
+ }

,
+ if((end == agingB) == false){
+ end=agingB;
+ }else{

,
+ if((end > signChangeIndex) == true){
+ end=signChangeIndex;
+ }

,
+ if((end > signChangeIndex) == true){
+ end=signChangeIndex;
+ }else{

,
+ if((end == signChangeIndex) == false){
+ end=signChangeIndex;
+ }

,
+ if((end == 1) == false){
+ end=1;
+ }

,
+ if((end == start) == false){
+ end=start;
+ }

,
+ if((end >= 1) == true){
+ end=1;
+ }else{

,
+ if((end >= 0) == true){
+ end=0;
+ }else{

,
+ if((end == start) == false){
+ start=end;
+ }else{

,
+ if((end == signChangeIndex) == false){
+ end=signChangeIndex;
+ }else{

,
+ if((end >= start) == true){
+ start=end;
+ }else{

,
+ if((end > 0) == true){
+ end=0;
+ }else{

,
+ if((end == 1) == false){
+ end=1;
+ }else{

,
+ if((end >= signChangeIndex) == true){
+ end=signChangeIndex;
+ }else{

,
+ if((end > start) == true){
+ start=end;
+ }else{

,
+ if((end >= start) == true){
+ start=end;
+ }

,
+ if((end > 1) == true){
+ end=1;
+ }

,
+ if((end > start) == true){
+ start=end;
+ }

,
+ end=2;

,
+ if((end == signChangeIndex) == false){
+ signChangeIndex=end;
+ }else{

,
+ if((end == agingB) == false){
+ end=agingB;
+ }

,
+ start=end;

,
+ if((end >= agingB) == true){
+ end=agingB;
+ }

,
+ if((end > agingB) == true){
+ end=agingB;
+ }

,
+ if((end > 0) == true){
+ end=0;
+ }

,
+ if((end > start) == true){
+ end=start;
+ }else{

,
+ if((end > signChangeIndex) == true){
+ signChangeIndex=end;
+ }else{

,
+ if((end > agingB) == true){
+ end=agingB;
+ }else{

,
+ if((end == start) == false){
+ end=start;
+ }else{

,
+ end=0;

,
+ if((end == 0) == false){
+ end=0;
+ }else{

,
+ if((end >= signChangeIndex) == true){
+ end=signChangeIndex;
+ }

,
+ if((end >= start) == true){
+ end=start;
+ }else{

,
+ if((end > 1) == true){
+ end=1;
+ }else{

,
+ if((end == 0) == false){
+ end=0;
+ }

,
+ if((end >= 2) == true){
+ end=2;
+ }

,
+ if((end >= signChangeIndex) == true){
+ signChangeIndex=end;
+ }else{

,
+ end=signChangeIndex;

,
+ if((end >= agingB) == true){
+ end=agingB;
+ }else{

,
+ end=agingB;

,
+ end=1;

,
+ if((end == start) == false){
+ start=end;
+ }

,
+ if((end >= 1) == true){
+ end=1;
+ }

,
+ if((end >= start) == true){
+ end=start;
+ }

,
+ if((end > start) == true){
+ end=start;
+ }

,
+ if((end == 2) == false){
+ end=2;
+ }

,
+ end=start;

,
+ if((end >= 0) == true){
+ end=0;
+ }

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xB >= xB - xA) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (0.5 * (xB - xA) > 0.5 * (xB - xA) + xA) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {

,
+ if((nbPoints == signChangeIndex) == false){
+ signChangeIndex=nbPoints;
+ }else{

,
+ if((nbPoints >= signChangeIndex) == true){
+ signChangeIndex=nbPoints;
+ }

,
+ if((nbPoints >= signChangeIndex) == true){
+ signChangeIndex=nbPoints;
+ }else{

,
+ }

,
+ if((nextX >= targetY) == false){
+ targetY=nextX;
+ }

,
+ if((nextX > targetY) == false){
+ targetY=nextX;
+ }

,
+ targetY=nextX;

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (end - start != nbPoints || end - signChangeIndex <= signChangeIndex - start) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || ((end - start != nbPoints) == end - signChangeIndex <= signChangeIndex - start) == true) {

,
+ if((end - start >= signChangeIndex) == true){
+ signChangeIndex=end - start;
+ }

,
+ if((end - start >= signChangeIndex) == true){
+ signChangeIndex=end - start;
+ }else{

,
+ }else{

,
- y[signChangeIndex]=nextY;
+ }else{

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= yA) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA > yA) == false) {

,
+ if((start >= end - signChangeIndex) == false){
+ start=end - signChangeIndex;
+ }else{

,
- x[signChangeIndex]=nextX;
+ }else{

,
- x[signChangeIndex]=nextX;

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > xB - xA) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= xB - xA) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > 0.5 * (xB - xA)) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= 0.5 * (xB - xA)) == false) {

,
- yB=y[signChangeIndex];
+ }

,
- yB=y[signChangeIndex];

,
+ if((start >= end - signChangeIndex) == false){
+ start=end - signChangeIndex;
+ }

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xB > xB - xA) == false) {

,
+ if((xA > targetY) == false){
+ targetY=xA;
+ }

,
+ if((xA >= targetY) == false){
+ targetY=xA;
+ }

,
+ if((xA >= targetY) == false){
+ targetY=xA;
+ }else{

,
+ targetY=xA;

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (0.5 * (xB - xA) >= 0.5 * (xB - xA) + xA) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA > getFunctionValueAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA > xTol) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= getFunctionValueAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA > getAbsoluteAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > getFunctionValueAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xTol >= nextX) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= xTol) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= getAbsoluteAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= targetY) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (yA >= nextX) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= getAbsoluteAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= getRelativeAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > getRelativeAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= getFunctionValueAccuracy()) == false) {

,
+ if((xA >= targetY) == false){
+ targetY=xA;

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= getRelativeAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (yA > nextX) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA > getRelativeAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > getAbsoluteAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xTol > nextX) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xB - xA > 0.5 * (xB - xA) + xA) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= targetY) == false) {

,
+ if((xA > targetY) == false){
+ targetY=xA;

,
+ if((nextX >= targetY) == false){
+ targetY=nextX;

,
+ if((nextX > targetY) == false){
+ targetY=nextX;

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > getMin()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA > targetY) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX > targetY) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (nextX >= getMin()) == false) {

,
- if (Double.isNaN(nextX)) {
+ if (Double.isNaN(nextX) || (end - signChangeIndex <= signChangeIndex - start && agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (xA >= yB) == false) {

,
+ targetY=getMin();

,
+ if((targetY >= getMin()) == true){
+ targetY=getMin();
+ }

,
+ if((targetY > getMin()) == true){
+ targetY=getMin();
+ }else{

,
+ if((targetY > getMin()) == true){
+ targetY=getMin();
+ }

,
- x[signChangeIndex]=nextX;
+ if((xB >= xB - xA) == false){
+ xB=xB - xA;
+ }else{

,
- x[signChangeIndex]=nextX;
+ if(!((xA >= yA) == false)){

,
- x[signChangeIndex]=nextX;
+ if(!((xB >= xB - xA) == false)){

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (yA > getMin()) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (yB > getMin()) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (getMin() > getAbsoluteAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (absYB >= getMin()) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (getMin() >= getFunctionValueAccuracy()) == false) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (absYB > getMin()) == true) {

,
- if (signChangeIndex - start >= end - signChangeIndex) {
+ if (signChangeIndex - start >= end - signChangeIndex || (absYA >= getMin()) == true) {

,
-                    if (signChangeIndex - start >= end - signChangeIndex) {
+                    if (2.0 >= (end - signChangeIndex)) {
,
-                        --end;
+			 signChangeIndex++;
,
-                System.arraycopy(x, start, x, 0, nbPoints);
+                java.lang.System.arraycopy(x, 1, x, 0, signChangeIndex);
,
-                        --end;
+                        ++signChangeIndex;
,
-        for (int j = end - 1; j >= start; --j) {
+        for (int j = (maximalOrder) - 1; j >= start; --j) {
